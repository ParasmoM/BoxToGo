@use "../base/variables" as *;

// Containers
%container {
    padding-inline: $spacing-large;
    margin-inline: auto;
    
    &-primary {
        @extend %container;
        max-width: map-get($breakpoints, 'xxl');
    }

    &-secondary {
        @extend %container;
        max-width: calc(map-get($breakpoints, 'md') - 224px);
    }
}

// Sections
%section {margin-top: 10rem;}

// Titles
%title {
    font-family: $ff-secondary;
    font-weight: $font-weight-semi-bold;

    &-primary {
        @extend %title;
        font-size: $font-size-huge;
        margin-bottom: $spacing-large;
        position: relative;

        &::before {
            content: "";
            display: inline-block;
            height: .2rem;
            width: 4rem;
            background-color: $black;
            position: absolute;
            bottom: 0;
        }
    }

    &-secondary {
        @extend %title;
        font-size: $font-size-extra-large;
        margin-bottom: $spacing-medium;
    }
}

// Buttons
%btn {
    display: inline-flex;
    align-items: center;
    gap: $spacing-small;
    font-size: $font-size-default;
    font-weight: $font-weight-semi-bold;
    border-radius: $border-radius;
    padding-inline: 2.4rem;
    cursor: pointer;
    height: 4rem;

    &-primary{
        @extend %btn;

        // @each $variant, $colors in $btn-colors {
        //     &--#{$variant} {
        //         @include button-variant(map-get($colors, bg), map-get($colors, text), map-get($colors, border), map-get($colors, hover-bg));
        //     }
        // }
    }

    &-radio {
        font-weight: $font-weight-medium;
        border-radius: $border-radius;
        background-color: $bg-admin;
        padding: 2.5px;

        & > * {
            border-radius: $border-radius;
            padding: .8rem $spacing-small;
            display: inline-block;

            &.active {
                background-color: $white;
                color: $primary;
            }
        }
    }
}
