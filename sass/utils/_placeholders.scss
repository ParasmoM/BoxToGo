@use "../base/variables" as *;
@use "mixins" as *;


// Font sizes 
@each $name, $size in $font-sizes {
    %fs-#{$name} {
        font-size: $size;
    }
}

// Font weights 
@each $name, $weight in $font-weights {
    %fw-#{$name} {
        font-weight: $weight;
    }
}

// Padding and Margin
@each $type in $spacing-types {
    @each $name, $value in $spacings {
        $typeSuffix: '';

        @if $type != 'default' {
            $typeSuffix: '-#{$type}';
        }

        %padding#{$typeSuffix}-#{$name} {
            padding#{$typeSuffix}: $value;
        }

        %margin#{$typeSuffix}-#{$name} {
            margin#{$typeSuffix}: $value;
        }
    }
}


// Containers
%container {
    @extend %margin-inline-auto;
    
    &-primary {
        @extend %container;
        max-width: map-get($breakpoints, 'xxl');
    }

    &-secondary {
        @extend %container;
        max-width: map-get($breakpoints, 'md');
        // width: calc(map-get($breakpoints, 'md') - 224px);
    }
}

// Sections
%section {margin-top: 10rem;}


// Titles
%title {
    @each $variant, $value in $titles {
        &-#{$variant} {
            @include titles(map-get($value, fs), map-get($value, spacing), map-get($value, style));
        }
    }
}

// Buttons
%btn {
    @extend %fs-md;
    @extend %fw-medium;
    display: inline-flex;
    align-items: center;
    border-radius: $border-radius;
    cursor: pointer;

    &-color {

    }
    &-black {
        @extend %btn;
        @extend %padding-inline-md;
        height: 4rem;
        justify-content: center;
        border: solid 1px $border-color;
        color: var(--clr-white);
        background-color: var(--clr-black);
    }
    &-white {
        @extend %btn;
        @extend %padding-inline-md;
        height: 4rem;
        justify-content: center;
        border: solid 1px $border-color;
    }
    
    &-icone-color {

    }
    &-icone-black {
        
    }
    &-icone-white {
        
    }

    &-checkbox-toggle {

    }
    &-checkbox-press {
        @extend %btn;
        flex-wrap: wrap;
        gap: var(--spacing-sm);

        label {
            @extend %padding-inline-sm;
            height: 4rem;
            display: flex;
            align-items: center;
            white-space: nowrap;
            border-radius: $border-radius;
            background-color: var(--clr-gray-200);
            // display: block;
        }
        input[type="checkbox"]:checked + label {
            background-color: var(--clr-white);
            border:solid 1px var(--clr-primary);
            color: var(--clr-primary);
        }
        input[type="checkbox"] {
            display: none;
        }
    }

    &-radio-slide {
        @extend %btn;
        background-color:  var(--clr-gray-200);
        padding: 3px;

        & > * {
            @extend %padding-inline-sm;
            display: inline-flex;
            align-items: center;
            border-radius: $border-radius;
            white-space: nowrap;
            height: 100%;

            &.active {
                background-color:  var(--clr-white);
                color:  var(--clr-primary);
            }
        }
    }
    &-radio-press {
        @extend %btn;
        gap: var(--spacing-sm);
        height: 4rem;

        label {
            @extend %padding-inline-sm;
            height: 100%;
            display: flex;
            align-items: center;
            border-radius: $border-radius;
            background-color: var(--clr-gray-200);
            // border: solid 1px $border-color;
        }
        input[type="radio"]:checked + label {
            background-color: var(--clr-white);
            border:solid 1px var(--clr-primary);
            color: var(--clr-primary);
        }
        
        input[type="radio"] {
            display: none;
        }
    }
    &-radio-group {
        
    }
}

