@use "../base/variables" as *;
@use "mixins" as *;


// Font sizes 
@each $name, $size in $font-sizes {
    %fs-#{$name} {
        font-size: $size;
    }
}

// Font weights 
@each $name, $weight in $font-weights {
    %fw-#{$name} {
        font-weight: $weight;
    }
}

// Padding and Margin
@each $type in $spacing-types {
    @each $name, $value in $spacings {
        $typeSuffix: '';

        @if $type != 'default' {
            $typeSuffix: '-#{$type}';
        }

        %padding#{$typeSuffix}-#{$name} {
            padding#{$typeSuffix}: $value;
        }

        %margin#{$typeSuffix}-#{$name} {
            margin#{$typeSuffix}: $value;
        }
    }
}


// Containers
%container {
    @extend %padding-inline-xl;
    @extend %margin-inline-auto;
    
    &-primary {
        @extend %container;
        max-width: map-get($breakpoints, 'xxl');
    }

    &-secondary {
        @extend %container;
        width: calc(map-get($breakpoints, 'md') - 224px);
    }
}

// Sections
%section {margin-top: 10rem;}


// Titles
%title {
    @each $variant, $value in $titles {
        &-#{$variant} {
            @include titles(map-get($value, fs), map-get($value, spacing), map-get($value, style));
        }
    }
}

// Buttons
%btn {

    &-color {

    }
    &-black {
        
    }
    &-white {
        
    }
    
    &-icone-color {

    }
    &-icone-black {
        
    }
    &-icone-white {
        
    }

    &-checkbox-toggle {

    }
    &-checkbox-press {
        
    }

    &-radio-slide {

    }
    &-radio-select {
        
    }
    &-radio-group {
        
    }
}

// Buttons
%btn {
    display: inline-flex;
    align-items: center;
    gap: var(--spacing-sm);
    border-radius: $border-radius;
    padding-inline: 2.4rem;
    cursor: pointer;
    height: 4rem;

    &-primary{
        @extend %btn;

        // @each $variant, $colors in $btn-colors {
        //     &--#{$variant} {
        //         @include button-variant(map-get($colors, bg), map-get($colors, text), map-get($colors, border), map-get($colors, hover-bg));
        //     }
        // }
    }

    &-radio {
        border-radius: $border-radius;
        background-color:  var(--clr-gray-200);
        padding: 2.5px;

        & > * {
            @extend %padding-block-xs;
            @extend %padding-inline-sm;
            border-radius: $border-radius;
            display: inline-block;

            &.active {
                background-color:  var(--clr-white);
                color:  var(--clr-primary);
            }
        }
    }
}
